version: 2
jobs:
  install:
    docker:
      - image: circleci/node:dubnium-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}-{{ .Environment.CACHE_VERSION }}
            - dependencies-
      - run: yarn global add node-gyp && yarn install
      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ checksum "package.json" }}-{{ .Environment.CACHE_VERSION }}
  build:
    docker:
        - image: circleci/node:dubnium-browsers
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - dependencies-{{ checksum "package.json" }}-{{ .Environment.CACHE_VERSION }}
            - dependencies-
      - run: yarn run build
      - run:
          name : Persist
          command: |
            cp -r ./dist /tmp/server-front

      - persist_to_workspace:
          root: /tmp
          paths:
            - server-front

      - save_cache:
          paths:
            - node_modules
          key: dependencies-{{ checksum "package.json" }}-{{ .Environment.CACHE_VERSION }}

  deploy:
    docker:
        - image: circleci/node:dubnium-browsers
    working_directory: ~/repo
    steps:
        - attach_workspace:
            at: /tmp
        - run:
            name: Deploy app
            command: |
                npx netlify-cli deploy --site $NETLIFY_SITE_ID --auth $NETLIFY_AUTH_TOKEN --dir /tmp/server-front --prod


  dockerB&P:
      docker:
          - image: docker:17.05.0-ce-git
      steps:
          - checkout
          - setup_remote_docker
          - run:
              name: Build application Docker image
              command: docker build --cache-from=app -t app .
          - deploy:
              name: push app to dockerhub
              command: |
                  docker login -e $DOCKER_HUB_EMAIL -u $DOCKER_HUB_USER_ID -p $DOCKER_HUB_PWD
                  docker tag app $DOCKER_HUB_USER_ID/my-python-app:$CIRCLE_BUILD_NUM
                  docker tag app $DOCKER_HUB_USER_ID/my-python-app:latest
                  docker push $DOCKER_HUB_USER_ID/my-python-app:$CIRCLE_BUILD_NUM
                  docker push $DOCKER_HUB_USER_ID/my-python-app:latest


workflows:
    version: 2
    front-install:
      jobs:
        - install
        - build:
            requires:
                - install
        - deploy:
            requires:
                - build
        - dockerB&P:
            requires:
                - build
